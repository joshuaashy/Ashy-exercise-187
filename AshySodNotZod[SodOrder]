/* CPT 187, Ashy Joshua
 * February, 18 2020
 * The purpose of this Program is to gather item selection and what
 * category the customer falls under for membership and then provide 
 * a detailed report of purchase and which prize was selected by random.
 * I used the information provided in the supportive class. 
 */

package edu.cpt187.ashy.participation6;


public class SodOrder 
{
	//declare initialize class constants
	private final double ZERO_TOTAL = 0.0;
	private final double TAX_RATE = .075;
	//declare class constants
	private int[] itemCounts;
	private int[] discountCounts;
	private int[] prizeCounts;
	//declare initialize class variables
	private char discountType = ' ';
	private String itemName = "";
	private double itemPrice = 0.00;
	private String discountName = "";
	private double discountRate = 0.00;
	private int howMany = 0;
	private int itemID = 0;
	private int lastItemSelectedIndex = 0;
	private String prizeName = "";


	//Constructor
	public SodOrder()
	{

	}

	public void setItemCountArray(int borrowedMaxRecords)
	{
		//Initialize item counts
		if(itemCounts == null)
		{
			itemCounts = new int[borrowedMaxRecords];
		}


	}

	public void setItemID(int[] borrowedItemIDs)
	{
		itemID = borrowedItemIDs[lastItemSelectedIndex];
	}
	//set item selection
	public void setItemSelection(int borrowedSearchIndex)
	{
		lastItemSelectedIndex = borrowedSearchIndex;
	}

	//set method 
	public void setItemName(String[] borrowedItemNames)
	{
		itemName = borrowedItemNames[lastItemSelectedIndex];	
		itemCounts[lastItemSelectedIndex]++;

	}
	//set method ItemPrice
	public void setItemPrice(double[] borrowedItemPrice)
	{
		itemPrice = borrowedItemPrice[lastItemSelectedIndex];

	}
	//set method for how many
	public void setHowMany(int borrowedHowMany)
	{
		howMany = borrowedHowMany;
	}
	//set method for menu selection
	public void setDiscountType(char borrowedMenuSelection)
	{
		discountType = borrowedMenuSelection;
	}
	//set method and selection structure
	public void setDiscountName(String[] borrowedDiscountNames)
	{
		//Initialize discountCounts
		if(discountCounts == null)
		{
			discountCounts = new int[borrowedDiscountNames.length];
		}
		if(discountType == 'A')
		{

			discountName = borrowedDiscountNames[0];
			discountCounts[0]++;

		}
		else if (discountType == 'B')
		{

			discountName = borrowedDiscountNames[1];
			discountCounts[1]++;
		}
		else 
		{ 

			discountName = borrowedDiscountNames[2];
			discountCounts[2]++;
		}
	}
	//set method and selection structure
	public void setDiscountRate(double[] borrowedDiscountRates)
	{
		if(discountType == 'A')
		{
			discountRate = borrowedDiscountRates[0];


		}
		else if (discountType == 'B')
		{
			discountRate = borrowedDiscountRates[1];

		}
		else 
		{ 
			discountRate = borrowedDiscountRates[2];

		}
	}

	//set method and selection from RandomNumber for prize Selection
	public void setPrizeName(String[] borrowedPrizeNames, int borrowedPrizeIndex)
	{
		//Initialize prizeCounts
		if(prizeCounts == null)
		{
			prizeCounts = new int[borrowedPrizeNames.length];
		}

		prizeName = borrowedPrizeNames[borrowedPrizeIndex];
		prizeCounts[borrowedPrizeIndex]++;


	}

	//set decrease in stock item
	public void setDecreaseStock( Inventory borrowedInventoryObject)
	{

		borrowedInventoryObject.setReduceStock(howMany);

	}

	//get inStockCounts
	public int getInStockCount(int[] borrowedInstockCounts)
	{
		return borrowedInstockCounts[lastItemSelectedIndex];

	}

	//get ItemID
	public int getItemID()
	{
		return itemID;
	}

	//method to get name
	public String getItemName()
	{
		return itemName;
	}//end

	//method get price
	public double getItemPrice()
	{
		return itemPrice;
	}//end

	//get item counts
	public int[] getItemCounts() 
	{
		return itemCounts;
	}
	//method get quantity
	public int getHowMany()
	{
		return howMany;
	}//end quantity

	//get discount name
	public String getDiscountName()
	{
		return discountName;
	}

	//get discount rate
	public double getDiscountRate()
	{
		return discountRate;
	}

	//get discount counts
	public int[] getDiscountCounts()
	{
		return discountCounts;
	}

	//calculations for order report
	public double getDiscountAmt()
	{
		return itemPrice * discountRate;
	}

	//get discount price
	public double getDiscountPrice()
	{
		return itemPrice - getDiscountAmt();
	}

	//get prize name 
	public String getPrizeName()
	{
		return prizeName;
	}

	//get prize counts
	public int[] getPrizeCounts()
	{
		return prizeCounts;
	}

	//get subTotal start calculations
	public double getSubTotal()
	{
		return howMany * getDiscountPrice();
	}

	//get Tax Rate
	public double getTaxRate()
	{
		return TAX_RATE;
	}

	//get Tax amount
	public double getTaxAmt()
	{
		return (getSubTotal() * TAX_RATE);
	}

	//get total cost
	public double getTotalCost()
	{
		if(discountType == ' ')
		{
			return ZERO_TOTAL;

		}
		else 
		{
			return (getSubTotal() + getTaxAmt());
		}

	}//End of calculations





}//end SodOrder class
